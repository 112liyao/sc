---
date: 2016-12-19 16:37
status: public
title: node
---

#node节点
*   html文档的根节点html
*   文档树模型中的每个节点都是一个节点
*   节点关系：父节点、兄弟节点、子节点
*   直接的父节点只有一个          

#HTML节点的分类
*   标签 /元素节点
*   文本节点
*   属性节点
*   注释节点
*   文档节点   document         
**所有的节点及其之间的相互关系构成整个html的文档树模型**        

#节点特点 ：节点的属性
*   nodeType     ：类型
*   nodeValue    ：节点的值
*   nodeName   ：节点的名字      
innerText获取的是文本的节点值（文本的内容）       

|节点类型|nodeType|nodeValue|nodeName| 
|:-----:|:-----:|:-----:|:-----:|
|元素节点|1|null|大写的标签名字|       
|文本节点|3|文本值，包含空格|#text| 
|属性节点|2|属性值|属性名|
|注释节点|8|注释内容|#comment| 
|文档节点|9|null|#document|          

#节点的关系
*   childNodes：获取所有子节点
*   parentNode：父节点
*   firstChild:第一个子节点
*   lastChild:最后一个子节点
*   nextSibling:下一个兄弟节点     可能取得的值：文本值
*   previousSibling:上一个兄弟节点

#节点的创建

*   创建元素节点：document.createElement(标签名字）
*   创建属性节点：
    *   标准属性：obj.id
                
            var 
    *   非标准属性：obj.setAttribute
    *   创建属性节点后赋值并获取（不常用）        

            <script>            
            var attr=document.createAttribute('aa');
            attr.nodeValue='bb';		
	        box.setAttributeNode(attr)  	
	        </script>
		 
* 创建注释：document.createComment("注释内容")
*   创建文本节点：
    *   obj.innerText
    *   obj.innerHTML
    *   document.createTextNode("")
    
*   节点追加
    *   父节点.appendChild(要添加的对象)     :添加在父节点的最后
    *   父节点.insertBefore(要插入的对象，要插入的某个对象之前)
    *   节点操作的是现有的元素，元素原有的位置改变，节点操作的

*   节点的删除
    *   父节点.removeChild(要删除的元素)
    
*   节点的替换
    *   父对象.replaceChild(要替换的节点，被替换的节点)
    
*   节点的复制
    *   obj.cloneNode([boolean]):参数可传可不传
        不传值或传False,只会拷贝当前的节点，事件和数据不会被拷贝     
        如果传true，将这个节点的所有后代节点全部拷贝，同样不会拷贝事件和数据